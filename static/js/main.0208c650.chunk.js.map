{"version":3,"sources":["components/GoodsList/GoodsList.tsx","api/goods.ts","components/Button/Button.tsx","App.tsx","index.tsx"],"names":["GoodsList","React","memo","goods","className","map","name","id","color","style","getAll","fetch","then","response","ok","Error","statusText","json","Button","text","dataCy","handleClick","type","onClick","buttons","loadFunction","sort","previousGood","currentGood","localeCompare","slice","filter","App","useState","setGoods","loading","setLoading","hasLoadingError","setHasLoadingError","loadGoods","useCallback","a","initialGoods","width","ReactDOM","render","document","getElementById"],"mappings":"6SAQaA,EAA6BC,IAAMC,MAC9C,gBAAGC,EAAH,EAAGA,MAAH,OACE,oBAAIC,UAAU,YAAd,SACGD,EAAME,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,GAAIC,EAAb,EAAaA,MAAb,OACT,oBACEJ,UAAU,OAEV,UAAQ,OACRK,MAAO,CAAED,SAJX,SAME,qBAAKJ,UAAU,aAAf,SACGE,KALEC,W,QCTR,SAASG,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,YAG3B,OAAOH,EAASI,UAIf,ICVMC,EAA0B,SAAC,GAAD,IACrCC,EADqC,EACrCA,KACAC,EAFqC,EAErCA,OACAC,EAHqC,EAGrCA,YAHqC,OAKrC,wBACEjB,UAAU,iBACVkB,KAAK,SACL,UAASF,EACTG,QAASF,EAJX,SAMGF,KCJCK,EAAwB,CAC5B,CACEL,KAAM,iBACNM,aAAcf,EACdU,OAAQ,cAEV,CACED,KAAM,qBACNM,aFLqB,WACvB,OAAOf,IACJE,MAAK,SAAAT,GAAK,OAAI,YAAIA,GAChBuB,MAAK,SAACC,EAAcC,GACnB,OAAOD,EAAarB,KAAKuB,cAAcD,EAAYtB,SAEpDwB,MAAM,EAAG,OEAZV,OAAQ,qBAEV,CACED,KAAM,iBACNM,aFDuB,WACzB,OAAOf,IACJE,MAAK,SAAAT,GAAK,OAAIA,EAAM4B,QAAO,kBAAyB,QAAzB,EAAGvB,aEA/BY,OAAQ,eAICY,EAAgB,WAC3B,MAA0BC,mBAAiB,IAA3C,mBAAO9B,EAAP,KAAc+B,EAAd,KACA,EAA8BD,oBAAS,GAAvC,mBAAOE,EAAP,KAAgBC,EAAhB,KACA,EAA8CH,oBAAS,GAAvD,mBAAOI,EAAP,KAAwBC,EAAxB,KAEMC,EAAYC,sBAAW,uCAAC,WAAOf,GAAP,eAAAgB,EAAA,6DAC5BL,GAAW,GACXE,GAAmB,GAFS,kBAKCb,IALD,OAKpBiB,EALoB,OAO1BR,EAASQ,GACTN,GAAW,GACXE,GAAmB,GATO,kDAW1BA,GAAmB,GACnBF,GAAW,GAZe,0DAAD,sDAc1B,IAEH,OACE,qBAAKhC,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,wBAAf,UACE,oBAAIA,UAAU,QAAd,mCAEA,qBAAKA,UAAU,cAAf,SACGoB,EAAQnB,KAAI,gBAAGc,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAQK,EAAjB,EAAiBA,aAAjB,OACX,cAAC,EAAD,CAEEN,KAAMA,EACNC,OAAQA,EACRC,YAAa,kBAAMkB,EAAUd,KAHxBN,WASZkB,GACC,qBAAKjC,UAAU,yBAAf,iDAKD+B,EACC,qBAAK/B,UAAU,oCAAf,SACE,cAAC,IAAD,CAAMuC,MAAO,OAGf,cAAC,EAAD,CAAWxC,MAAOA,UC9E5ByC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0208c650.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from '../../types/Good';\nimport './GoodsList.scss';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = React.memo(\n  ({ goods }) => (\n    <ul className=\"cards-box\">\n      {goods.map(({ name, id, color }) => (\n        <li\n          className=\"card\"\n          key={id}\n          data-cy=\"good\"\n          style={{ color }}\n        >\n          <div className=\"card__name\">\n            {name}\n          </div>\n        </li>\n      ))}\n    </ul>\n  ),\n);\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      return response.json();\n    });\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => [...goods]\n      .sort((previousGood, currentGood) => {\n        return previousGood.name.localeCompare(currentGood.name);\n      })\n      .slice(0, 5));\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => goods.filter(({ color }) => color === 'red'));\n};\n","type Props = {\n  text: string,\n  dataCy: string,\n  handleClick: () => void,\n};\n\nexport const Button: React.FC<Props> = ({\n  text,\n  dataCy,\n  handleClick,\n}) => (\n  <button\n    className=\"button is-link\"\n    type=\"button\"\n    data-cy={dataCy}\n    onClick={handleClick}\n  >\n    {text}\n  </button>\n);\n","import './App.scss';\nimport { Oval } from 'react-loader-spinner';\nimport 'bulma';\n\nimport React, { useCallback, useState } from 'react';\nimport { GoodsList } from './components/GoodsList';\nimport { ButtonType } from './types/ButtonType';\nimport { Good } from './types/Good';\n\nimport { getAll, get5First, getRedGoods } from './api/goods';\nimport { LoadFn } from './types/LoadFn';\nimport { Button } from './components/Button';\n\nconst buttons: ButtonType[] = [\n  {\n    text: 'Load all goods',\n    loadFunction: getAll,\n    dataCy: 'all-button',\n  },\n  {\n    text: 'Load 5 first goods',\n    loadFunction: get5First,\n    dataCy: 'first-five-button',\n  },\n  {\n    text: 'Load red goods',\n    loadFunction: getRedGoods,\n    dataCy: 'red-button',\n  },\n];\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [hasLoadingError, setHasLoadingError] = useState(false);\n\n  const loadGoods = useCallback(async (loadFunction: LoadFn) => {\n    setLoading(true);\n    setHasLoadingError(false);\n\n    try {\n      const initialGoods = await loadFunction();\n\n      setGoods(initialGoods);\n      setLoading(false);\n      setHasLoadingError(false);\n    } catch (error) {\n      setHasLoadingError(true);\n      setLoading(false);\n    }\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <div className=\"box has-text-centered\">\n          <h1 className=\"title\">Dynamic list of Goods</h1>\n\n          <div className=\"buttons-box\">\n            {buttons.map(({ text, dataCy, loadFunction }) => (\n              <Button\n                key={text}\n                text={text}\n                dataCy={dataCy}\n                handleClick={() => loadGoods(loadFunction)}\n              />\n            ))}\n          </div>\n        </div>\n\n        {hasLoadingError && (\n          <div className=\"notification is-danger\">\n            An error occured when loading data!\n          </div>\n        )}\n\n        {loading ? (\n          <div className=\"is-flex is-justify-content-center\">\n            <Oval width={70} />\n          </div>\n        ) : (\n          <GoodsList goods={goods} />\n        )}\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}