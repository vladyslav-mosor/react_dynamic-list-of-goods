{"version":3,"sources":["components/GoodsList/GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","React","memo","goods","className","map","name","id","color","style","API_URL","wait","delay","Promise","resolve","setTimeout","getAll","a","fetch","then","response","ok","Error","statusText","json","buttons","text","loadFunction","dataCy","sort","previousGood","currentGood","localeCompare","slice","filter","App","useState","setGoods","loading","setLoading","hasLoadingError","setHasLoadingError","loadGoods","useCallback","initialGoods","handleClick","type","onClick","width","ReactDOM","render","document","getElementById"],"mappings":"4SAQaA,EAA6BC,IAAMC,MAC9C,gBAAGC,EAAH,EAAGA,MAAH,OACE,oBAAIC,UAAU,YAAd,SACGD,EAAME,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,GAAIC,EAAb,EAAaA,MAAb,OACT,oBACEJ,UAAU,OAEV,UAAQ,OACRK,MAAO,CAAED,SAJX,SAME,qBAAKJ,UAAU,aAAf,SACGE,KALEC,W,QCXTG,EAAO,wEAEb,SAASC,EAAKC,GACZ,OAAO,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,MAG7C,SAAeI,IAAtB,+B,4CAAO,sBAAAC,EAAA,sEACCN,EAAK,KADN,gCAGEO,MAAMR,GACVS,MAAK,SAAAC,GACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,YAG3B,OAAOH,EAASI,WATf,4C,sBAaA,ICXDC,EAAoB,CACxB,CACEC,KAAM,iBACNC,aAAcX,EACdY,OAAQ,cAEV,CACEF,KAAM,qBACNC,aDGqB,WACvB,OAAOX,IACJG,MAAK,SAAAhB,GAAK,OAAI,YAAIA,GAChB0B,MAAK,SAACC,EAAcC,GACnB,OAAOD,EAAaxB,KAAK0B,cAAcD,EAAYzB,SAEpD2B,MAAM,EAAG,OCRZL,OAAQ,qBAEV,CACEF,KAAM,iBACNC,aDOuB,WACzB,OAAOX,IACJG,MAAK,SAAAhB,GAAK,OAAIA,EAAM+B,QAAO,kBAAyB,QAAzB,EAAG1B,aCR/BoB,OAAQ,eAICO,EAAgB,WAC3B,MAA0BC,mBAAiB,IAA3C,mBAAOjC,EAAP,KAAckC,EAAd,KACA,EAA8BD,oBAAS,GAAvC,mBAAOE,EAAP,KAAgBC,EAAhB,KACA,EAA8CH,oBAAS,GAAvD,mBAAOI,EAAP,KAAwBC,EAAxB,KAEMC,EAAYC,sBAAW,uCAAC,WAAOhB,GAAP,eAAAV,EAAA,6DAC5BsB,GAAW,GACXE,GAAmB,GAFS,kBAKCd,IALD,OAKpBiB,EALoB,OAO1BP,EAASO,GACTL,GAAW,GACXE,GAAmB,GATO,kDAW1BA,GAAmB,GACnBF,GAAW,GAZe,0DAAD,sDAc1B,IAEGM,EAAcF,uBAAY,SAC9BhB,GAEAe,EAAUf,KACT,CAACe,IAEJ,OACE,qBAAKtC,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,wBAAf,UACE,oBAAIA,UAAU,QAAd,mCAEA,qBAAKA,UAAU,cAAf,SACGqB,EAAQpB,KAAI,gBAAGqB,EAAH,EAAGA,KAAME,EAAT,EAASA,OAAQD,EAAjB,EAAiBA,aAAjB,OACX,wBACEvB,UAAU,iBACV0C,KAAK,SACL,UAASlB,EACTmB,QAAS,kBAAMF,EAAYlB,IAJ7B,SAOGD,GAFIA,WAQZc,GACC,qBAAKpC,UAAU,yBAAf,iDAKDkC,EACC,qBAAKlC,UAAU,oCAAf,SACE,cAAC,IAAD,CAAM4C,MAAO,OAGf,cAAC,EAAD,CAAW7C,MAAOA,UCrF5B8C,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.27fe593a.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from '../../types/Good';\nimport './GoodsList.scss';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = React.memo(\n  ({ goods }) => (\n    <ul className=\"cards-box\">\n      {goods.map(({ name, id, color }) => (\n        <li\n          className=\"card\"\n          key={id}\n          data-cy=\"good\"\n          style={{ color }}\n        >\n          <div className=\"card__name\">\n            {name}\n          </div>\n        </li>\n      ))}\n    </ul>\n  ),\n);\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getAll(): Promise<Good[]> {\n  await wait(300);\n\n  return fetch(API_URL)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      return response.json();\n    });\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => [...goods]\n      .sort((previousGood, currentGood) => {\n        return previousGood.name.localeCompare(currentGood.name);\n      })\n      .slice(0, 5));\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => goods.filter(({ color }) => color === 'red'));\n};\n","import './App.scss';\nimport { Oval } from 'react-loader-spinner';\nimport 'bulma';\n\nimport React, { useCallback, useState } from 'react';\nimport { GoodsList } from './components/GoodsList';\nimport { Button } from './types/Button';\nimport { Good } from './types/Good';\n\nimport { getAll, get5First, getRedGoods } from './api/goods';\n\nconst buttons: Button[] = [\n  {\n    text: 'Load all goods',\n    loadFunction: getAll,\n    dataCy: 'all-button',\n  },\n  {\n    text: 'Load 5 first goods',\n    loadFunction: get5First,\n    dataCy: 'first-five-button',\n  },\n  {\n    text: 'Load red goods',\n    loadFunction: getRedGoods,\n    dataCy: 'red-button',\n  },\n];\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [hasLoadingError, setHasLoadingError] = useState(false);\n\n  const loadGoods = useCallback(async (loadFunction: () => Promise<Good[]>) => {\n    setLoading(true);\n    setHasLoadingError(false);\n\n    try {\n      const initialGoods = await loadFunction();\n\n      setGoods(initialGoods);\n      setLoading(false);\n      setHasLoadingError(false);\n    } catch (error) {\n      setHasLoadingError(true);\n      setLoading(false);\n    }\n  }, []);\n\n  const handleClick = useCallback((\n    loadFunction: () => Promise<Good[]>,\n  ): void => {\n    loadGoods(loadFunction);\n  }, [loadGoods]);\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <div className=\"box has-text-centered\">\n          <h1 className=\"title\">Dynamic list of Goods</h1>\n\n          <div className=\"buttons-box\">\n            {buttons.map(({ text, dataCy, loadFunction }) => (\n              <button\n                className=\"button is-link\"\n                type=\"button\"\n                data-cy={dataCy}\n                onClick={() => handleClick(loadFunction)}\n                key={text}\n              >\n                {text}\n              </button>\n            ))}\n          </div>\n        </div>\n\n        {hasLoadingError && (\n          <div className=\"notification is-danger\">\n            An error occured when loading data!\n          </div>\n        )}\n\n        {loading ? (\n          <div className=\"is-flex is-justify-content-center\">\n            <Oval width={70} />\n          </div>\n        ) : (\n          <GoodsList goods={goods} />\n        )}\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}